Microsoft (R) Macro Assembler Version 14.33.31630.0	    10/29/22 15:23:14
(Integer arithmetic     (proj1_yeeja.asm		     Page 1 - 1


				TITLE Integer arithmetic     (proj1_yeeja.asm)

				; Author: Jameson yee
				; Last Modified:
				; OSU email address: yeeja@oregonstate.edu
				; Course number/section:   CS271 Section 001
				; Project Number: 1              Due Date: 4/17
				; Description: Basic Logic and Arithmetic Program 

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 2D 2D 2D 2D 2D	Greeting	BYTE	"------------Elementary Arithmetic by Jameson yee------------", 0
	   2D 2D 2D 2D 2D
	   2D 2D 45 6C 65
	   6D 65 6E 74 61
	   72 79 20 41 72
	   69 74 68 6D 65
	   74 69 63 20 62
	   79 20 4A 61 6D
	   65 73 6F 6E 20
	   79 65 65 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   00
 0000003D 2A 2A 45 43 3A	bonus		BYTE	"**EC: Program does division and displays quotient and remainder",0
	   20 50 72 6F 67
	   72 61 6D 20 64
	   6F 65 73 20 64
	   69 76 69 73 69
	   6F 6E 20 61 6E
	   64 20 64 69 73
	   70 6C 61 79 73
	   20 71 75 6F 74
	   69 65 6E 74 20
	   61 6E 64 20 72
	   65 6D 61 69 6E
	   64 65 72 00
 0000007D 45 6E 74 65 72	Prompt1		BYTE	"Enter 3 numbers A > B > C, and I'll show you the sums and difference ",0
	   20 33 20 6E 75
	   6D 62 65 72 73
	   20 41 20 3E 20
	   42 20 3E 20 43
	   2C 20 61 6E 64
	   20 49 27 6C 6C
	   20 73 68 6F 77
	   20 79 6F 75 20
	   74 68 65 20 73
	   75 6D 73 20 61
	   6E 64 20 64 69
	   66 66 65 72 65
	   6E 63 65 20 00
 000000C3 2D 2D 2D 2D 2D	break		BYTE	"------------extra credit------------", 0
	   2D 2D 2D 2D 2D
	   2D 2D 65 78 74
	   72 61 20 63 72
	   65 64 69 74 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 00
 000000E8 54 68 61 6E 6B	cya			BYTE	"Thanks for using Elementary Arithmetic!  Goodbye!",0
	   73 20 66 6F 72
	   20 75 73 69 6E
	   67 20 45 6C 65
	   6D 65 6E 74 61
	   72 79 20 41 72
	   69 74 68 6D 65
	   74 69 63 21 20
	   20 47 6F 6F 64
	   62 79 65 21 00
 0000011A 45 6E 74 65 72	in1			BYTE	"Enter the first number: ",0
	   20 74 68 65 20
	   66 69 72 73 74
	   20 6E 75 6D 62
	   65 72 3A 20 00
 00000133 45 6E 74 65 72	in2			BYTE	"Enter the second number: ",0
	   20 74 68 65 20
	   73 65 63 6F 6E
	   64 20 6E 75 6D
	   62 65 72 3A 20
	   00
 0000014D 45 6E 74 65 72	in3			BYTE	"Enter the third number: ",0
	   20 74 68 65 20
	   74 68 69 72 64
	   20 6E 75 6D 62
	   65 72 3A 20 00
 00000166 20 2B 20 00		plus		BYTE	" + ",0
 0000016A 20 2D 20 00		minus		BYTE	" - ",0
 0000016E 20 3D 20 00		equals		BYTE	" = ",0
 00000172 20 2F 20 00		divide		BYTE	" / ",0
 00000176 20 7C 20 52 65	r			BYTE	" | Remainder: ",0
	   6D 61 69 6E 64
	   65 72 3A 20 00
 00000185 00000000		r1			DWORD	0
 00000189 00000000		r2			DWORD	0
 0000018D 00000000		r3			DWORD   0
 00000191 46 69 72 73 74	out1		BYTE	"First number: ",0 ;(used for testing)
	   20 6E 75 6D 62
	   65 72 3A 20 00
 000001A0 53 65 63 6F 6E	out2		BYTE	"Second number: ",0
	   64 20 6E 75 6D
	   62 65 72 3A 20
	   00
 000001B0 54 68 69 72 64	out3		BYTE	"Third number: ",0
	   20 6E 75 6D 62
	   65 72 3A 20 00
 000001BF 00000000		num1		DWORD	0
 000001C3 00000000		num2		DWORD	0
 000001C7 00000000		num3		DWORD	0
 000001CB 00000000		ans1		DWORD	0
 000001CF 00000000		ans2		DWORD	0
 000001D3 00000000		ans3		DWORD	0
 000001D7 00000000		ans4		DWORD	0
 000001DB 00000000		ans5		DWORD	0
 000001DF 00000000		ans6		DWORD	0
 000001E3 00000000		ans7		DWORD	0
 000001E7 00000000		ans8		DWORD	0
 000001EB 00000000		ans9		DWORD	0
 000001EF 00000000		ans10		DWORD	0

 00000000			.code
 00000000			main PROC

				; (insert executable instructions here)
 00000000  BA 00000000 R		MOV		EDX, OFFSET Greeting
 00000005  E8 00000000 E		Call	WriteString
 0000000A  E8 00000000 E		Call	CrLf
 0000000F  BA 0000003D R		MOV		EDX, OFFSET bonus
 00000014  E8 00000000 E		Call	WriteString
 00000019  E8 00000000 E		CALL	CrLf
 0000001E  E8 00000000 E		CALL	CrLf
 00000023  BA 0000007D R		MOV		EDX, OFFSET Prompt1
 00000028  E8 00000000 E		Call	WriteString
 0000002D  E8 00000000 E		CALL	CrLf

					;first number
 00000032  BA 0000011A R		MOV		EDX, OFFSET in1
 00000037  E8 00000000 E		Call	WriteString
 0000003C  E8 00000000 E		Call	ReadDec
 00000041  A3 000001BF R		MOV		num1, EAX
					;Call	CrLf
					;MOV		EDX, OFFSET out1
					;Call	WriteString
					;MOV		EAX, num1
					;Call	WriteDec
					;Call	CrLf

					;second number
 00000046  BA 00000133 R		MOV		EDX, OFFSET in2
 0000004B  E8 00000000 E		Call	WriteString
 00000050  E8 00000000 E		Call	ReadDec
 00000055  A3 000001C3 R		MOV		num2, EAX
					;Call	CrLf
					;MOV		EDX, OFFSET out2
					;Call	WriteString
					;MOV		EAX, num2
					;Call	WriteDec
					;Call	CrLf

					;third number
 0000005A  BA 0000014D R		MOV		EDX, OFFSET in3
 0000005F  E8 00000000 E		Call	WriteString
 00000064  E8 00000000 E		Call	ReadDec
 00000069  A3 000001C7 R		MOV		num3, EAX
 0000006E  E8 00000000 E		Call	CrLf
					;MOV		EDX, OFFSET out3
					;Call	WriteString
					;MOV		EAX, num3
					;Call	WriteDec
					;Call	CrLf

					;math
 00000073  A1 000001BF R		MOV		EAX, num1
 00000078  03 05 000001C3 R		ADD		EAX, num2
 0000007E  A3 000001CB R		MOV		ans1, EAX

 00000083  A1 000001BF R		MOV		EAX, num1
 00000088  2B 05 000001C3 R		SUB		EAX, num2
 0000008E  A3 000001CF R		MOV		ans2, EAX

 00000093  A1 000001BF R		MOV		EAX, num1
 00000098  03 05 000001C7 R		ADD		EAX, num3
 0000009E  A3 000001D3 R		MOV		ans3, EAX

 000000A3  A1 000001BF R		MOV		EAX, num1
 000000A8  2B 05 000001C7 R		SUB		EAX, num3
 000000AE  A3 000001D7 R		MOV		ans4, EAX

 000000B3  A1 000001C3 R		MOV		EAX, num2
 000000B8  03 05 000001C7 R		ADD		EAX, num3
 000000BE  A3 000001DB R		MOV		ans5, EAX

 000000C3  A1 000001C3 R		MOV		EAX, num2
 000000C8  2B 05 000001C7 R		SUB		EAX, num3
 000000CE  A3 000001DF R		MOV		ans6, EAX

 000000D3  A1 000001BF R		MOV		EAX, num1
 000000D8  03 05 000001C3 R		ADD		EAX, num2
 000000DE  03 05 000001C7 R		ADD		EAX, num3
 000000E4  A3 000001E3 R		MOV		ans7, EAX

					;extra credit
 000000E9  A1 000001BF R		MOV		EAX, num1
 000000EE  BA 00000000			MOV		EDX, 0
 000000F3  8B 1D 000001C3 R		MOV		EBX, num2
 000000F9  F7 F3			DIV		EBX
 000000FB  A3 000001E7 R		MOV		ans8, EAX
 00000100  89 15 00000185 R		MOV		r1, EDX

 00000106  A1 000001BF R		MOV		EAX, num1
 0000010B  BA 00000000			MOV		EDX, 0
 00000110  8B 1D 000001C7 R		MOV		EBX, num3
 00000116  F7 F3			DIV		EBX
 00000118  A3 000001EB R		MOV		ans9, EAX
 0000011D  89 15 00000189 R		MOV		r2, EDX

 00000123  A1 000001C3 R		MOV		EAX, num2
 00000128  BA 00000000			MOV		EDX, 0
 0000012D  8B 1D 000001C7 R		MOV		EBX, num3
 00000133  F7 F3			DIV		EBX
 00000135  A3 000001EF R		MOV		ans10, EAX
 0000013A  89 15 0000018D R		MOV		r3, EDX

					


					;print answers
 00000140  A1 000001BF R		MOV		EAX, num1
 00000145  E8 00000000 E		Call	WriteDec
 0000014A  BA 00000166 R		MOV		EDX, OFFSET plus
 0000014F  E8 00000000 E		call	WriteString
 00000154  A1 000001C3 R		MOV		EAX, num2
 00000159  E8 00000000 E		CALL	WriteDec
 0000015E  BA 0000016E R		MOV		EDX, OFFSET equals
 00000163  E8 00000000 E		CALL	WriteString
 00000168  A1 000001CB R		mov		EAX, ans1
 0000016D  E8 00000000 E		call	WriteDec
 00000172  E8 00000000 E		CALL	CrLf

 00000177  A1 000001BF R		MOV		EAX, num1
 0000017C  E8 00000000 E		Call	WriteDec
 00000181  BA 0000016A R		MOV		EDX, OFFSET minus
 00000186  E8 00000000 E		call	WriteString
 0000018B  A1 000001C3 R		MOV		EAX, num2
 00000190  E8 00000000 E		CALL	WriteDec
 00000195  BA 0000016E R		MOV		EDX, OFFSET equals
 0000019A  E8 00000000 E		CALL	WriteString
 0000019F  A1 000001CF R		mov		EAX, ans2
 000001A4  E8 00000000 E		call	WriteDec
 000001A9  E8 00000000 E		CALL	CrLf

 000001AE  A1 000001BF R		MOV		EAX, num1
 000001B3  E8 00000000 E		Call	WriteDec
 000001B8  BA 00000166 R		MOV		EDX, OFFSET plus
 000001BD  E8 00000000 E		call	WriteString
 000001C2  A1 000001C7 R		MOV		EAX, num3
 000001C7  E8 00000000 E		CALL	WriteDec
 000001CC  BA 0000016E R		MOV		EDX, OFFSET equals
 000001D1  E8 00000000 E		CALL	WriteString
 000001D6  A1 000001D3 R		mov		EAX, ans3
 000001DB  E8 00000000 E		call	WriteDec
 000001E0  E8 00000000 E		CALL	CrLf

 000001E5  A1 000001BF R		MOV		EAX, num1
 000001EA  E8 00000000 E		Call	WriteDec
 000001EF  BA 0000016A R		MOV		EDX, OFFSET minus
 000001F4  E8 00000000 E		call	WriteString
 000001F9  A1 000001C7 R		MOV		EAX, num3
 000001FE  E8 00000000 E		CALL	WriteDec
 00000203  BA 0000016E R		MOV		EDX, OFFSET equals
 00000208  E8 00000000 E		CALL	WriteString
 0000020D  A1 000001D7 R		mov		EAX, ans4
 00000212  E8 00000000 E		call	WriteDec
 00000217  E8 00000000 E		CALL	CrLf

 0000021C  A1 000001C3 R		MOV		EAX, num2
 00000221  E8 00000000 E		Call	WriteDec
 00000226  BA 00000166 R		MOV		EDX, OFFSET plus
 0000022B  E8 00000000 E		call	WriteString
 00000230  A1 000001C7 R		MOV		EAX, num3
 00000235  E8 00000000 E		CALL	WriteDec
 0000023A  BA 0000016E R		MOV		EDX, OFFSET equals
 0000023F  E8 00000000 E		CALL	WriteString
 00000244  A1 000001DB R		mov		EAX, ans5
 00000249  E8 00000000 E		call	WriteDec
 0000024E  E8 00000000 E		CALL	CrLf

 00000253  A1 000001C3 R		MOV		EAX, num2
 00000258  E8 00000000 E		Call	WriteDec
 0000025D  BA 0000016A R		MOV		EDX, OFFSET minus
 00000262  E8 00000000 E		call	WriteString
 00000267  A1 000001C7 R		MOV		EAX, num3
 0000026C  E8 00000000 E		CALL	WriteDec
 00000271  BA 0000016E R		MOV		EDX, OFFSET equals
 00000276  E8 00000000 E		CALL	WriteString
 0000027B  A1 000001DF R		mov		EAX, ans6
 00000280  E8 00000000 E		call	WriteDec
 00000285  E8 00000000 E		CALL	CrLf

 0000028A  A1 000001BF R		MOV		EAX, num1
 0000028F  E8 00000000 E		Call	WriteDec
 00000294  BA 00000166 R		MOV		EDX, OFFSET plus
 00000299  E8 00000000 E		call	WriteString
 0000029E  A1 000001C3 R		MOV		EAX, num2
 000002A3  E8 00000000 E		CALL	WriteDec
 000002A8  BA 00000166 R		MOV		EDX, OFFSET plus
 000002AD  E8 00000000 E		call	WriteString
 000002B2  A1 000001C7 R		MOV		EAX, num3
 000002B7  E8 00000000 E		CALL	WriteDec
 000002BC  BA 0000016E R		MOV		EDX, OFFSET equals
 000002C1  E8 00000000 E		CALL	WriteString
 000002C6  A1 000001E3 R		mov		EAX, ans7
 000002CB  E8 00000000 E		call	WriteDec
 000002D0  E8 00000000 E		CALL	CrLf
 000002D5  E8 00000000 E		CALL	CrLf

					;extra credit
 000002DA  BA 000000C3 R		MOV		EDX, OFFSET break
 000002DF  E8 00000000 E		CALL	WriteString
 000002E4  E8 00000000 E		CALL	CrLf
 000002E9  E8 00000000 E		CALL	CrLf

 000002EE  A1 000001BF R		MOV		EAX, num1
 000002F3  E8 00000000 E		Call	WriteDec
 000002F8  BA 00000172 R		MOV		EDX, OFFSET divide
 000002FD  E8 00000000 E		call	WriteString
 00000302  A1 000001C3 R		MOV		EAX, num2
 00000307  E8 00000000 E		CALL	WriteDec
 0000030C  BA 0000016E R		MOV		EDX, OFFSET equals
 00000311  E8 00000000 E		CALL	WriteString
 00000316  A1 000001E7 R		mov		EAX, ans8
 0000031B  E8 00000000 E		call	WriteDec
 00000320  BA 00000176 R		MOV		EDX, OFFSET r
 00000325  E8 00000000 E		call	WriteString
 0000032A  A1 00000185 R		MOV		EAX, r1
 0000032F  E8 00000000 E		CALL	WriteDec
 00000334  E8 00000000 E		CALL	CrLf

 00000339  A1 000001BF R		MOV		EAX, num1
 0000033E  E8 00000000 E		Call	WriteDec
 00000343  BA 00000172 R		MOV		EDX, OFFSET divide
 00000348  E8 00000000 E		call	WriteString
 0000034D  A1 000001C7 R		MOV		EAX, num3
 00000352  E8 00000000 E		CALL	WriteDec
 00000357  BA 0000016E R		MOV		EDX, OFFSET equals
 0000035C  E8 00000000 E		CALL	WriteString
 00000361  A1 000001EB R		mov		EAX, ans9
 00000366  E8 00000000 E		call	WriteDec
 0000036B  BA 00000176 R		MOV		EDX, OFFSET r
 00000370  E8 00000000 E		call	WriteString
 00000375  A1 00000189 R		MOV		EAX, r2
 0000037A  E8 00000000 E		CALL	WriteDec
 0000037F  E8 00000000 E		CALL	CrLf

 00000384  A1 000001C3 R		MOV		EAX, num2
 00000389  E8 00000000 E		Call	WriteDec
 0000038E  BA 00000172 R		MOV		EDX, OFFSET divide
 00000393  E8 00000000 E		call	WriteString
 00000398  A1 000001C7 R		MOV		EAX, num3
 0000039D  E8 00000000 E		CALL	WriteDec
 000003A2  BA 0000016E R		MOV		EDX, OFFSET equals
 000003A7  E8 00000000 E		CALL	WriteString
 000003AC  A1 000001EF R		mov		EAX, ans10
 000003B1  E8 00000000 E		call	WriteDec
 000003B6  BA 00000176 R		MOV		EDX, OFFSET r
 000003BB  E8 00000000 E		call	WriteString
 000003C0  A1 0000018D R		MOV		EAX, r3
 000003C5  E8 00000000 E		CALL	WriteDec
 000003CA  E8 00000000 E		CALL	CrLf
 000003CF  E8 00000000 E		CALL	CrLf

 000003D4  BA 000000E8 R		MOV		EDX, OFFSET cya
 000003D9  E8 00000000 E		CALL	WriteString
 000003DE  E8 00000000 E		CALL	CrLf
 000003E3  E8 00000000 E		CALL	CrLf



					Invoke ExitProcess,0	; exit to operating system
 000003E8  6A 00	   *	    push   +000000000h
 000003EA  E8 00000000 E   *	    call   ExitProcess
 000003EF			main ENDP

				; (insert additional procedures here)

				END main
Microsoft (R) Macro Assembler Version 14.33.31630.0	    10/29/22 15:23:14
(Integer arithmetic     (proj1_yeeja.asm		     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001F3 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000003EF Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000003EF Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
Greeting . . . . . . . . . . . .	Byte	 00000000 _DATA	
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
Prompt1  . . . . . . . . . . . .	Byte	 0000007D _DATA	
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
ans10  . . . . . . . . . . . . .	DWord	 000001EF _DATA	
ans1 . . . . . . . . . . . . . .	DWord	 000001CB _DATA	
ans2 . . . . . . . . . . . . . .	DWord	 000001CF _DATA	
ans3 . . . . . . . . . . . . . .	DWord	 000001D3 _DATA	
ans4 . . . . . . . . . . . . . .	DWord	 000001D7 _DATA	
ans5 . . . . . . . . . . . . . .	DWord	 000001DB _DATA	
ans6 . . . . . . . . . . . . . .	DWord	 000001DF _DATA	
ans7 . . . . . . . . . . . . . .	DWord	 000001E3 _DATA	
ans8 . . . . . . . . . . . . . .	DWord	 000001E7 _DATA	
ans9 . . . . . . . . . . . . . .	DWord	 000001EB _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bonus  . . . . . . . . . . . . .	Byte	 0000003D _DATA	
break  . . . . . . . . . . . . .	Byte	 000000C3 _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
cya  . . . . . . . . . . . . . .	Byte	 000000E8 _DATA	
divide . . . . . . . . . . . . .	Byte	 00000172 _DATA	
equals . . . . . . . . . . . . .	Byte	 0000016E _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
in1  . . . . . . . . . . . . . .	Byte	 0000011A _DATA	
in2  . . . . . . . . . . . . . .	Byte	 00000133 _DATA	
in3  . . . . . . . . . . . . . .	Byte	 0000014D _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
minus  . . . . . . . . . . . . .	Byte	 0000016A _DATA	
num1 . . . . . . . . . . . . . .	DWord	 000001BF _DATA	
num2 . . . . . . . . . . . . . .	DWord	 000001C3 _DATA	
num3 . . . . . . . . . . . . . .	DWord	 000001C7 _DATA	
out1 . . . . . . . . . . . . . .	Byte	 00000191 _DATA	
out2 . . . . . . . . . . . . . .	Byte	 000001A0 _DATA	
out3 . . . . . . . . . . . . . .	Byte	 000001B0 _DATA	
plus . . . . . . . . . . . . . .	Byte	 00000166 _DATA	
r1 . . . . . . . . . . . . . . .	DWord	 00000185 _DATA	
r2 . . . . . . . . . . . . . . .	DWord	 00000189 _DATA	
r3 . . . . . . . . . . . . . . .	DWord	 0000018D _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
r  . . . . . . . . . . . . . . .	Byte	 00000176 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
